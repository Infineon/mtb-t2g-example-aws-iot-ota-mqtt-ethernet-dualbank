/**********************************************************************************************************************
 * \file mqtt_subscription_manager.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef MQTT_SUBSCRIPTION_MANAGER_H_
#define MQTT_SUBSCRIPTION_MANAGER_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
/* Include MQTT library */
#include "core_mqtt.h"

/* MQTT include */
#include "cy_mqtt_api.h"

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
/* Enumeration type for return status value from Subscription Manager API */
typedef enum SubscriptionManagerStatus
{
    /* Success return value from Subscription Manager API */
    SUBSCRIPTION_MANAGER_SUCCESS = 1,

    /* Failure return value due to registry being full */
    SUBSCRIPTION_MANAGER_REGISTRY_FULL = 2,

    /* Failure return value due to an already existing record in the registry for a new callback registration's
     * requested topic filter
     */
    SUBSCRIPTION_MANAGER_RECORD_EXISTS = 3
} SubscriptionManagerStatus_t;


/**********************************************************************************************************************
 * Function Type Name: (*SubscriptionManagerCallback_t)()
 * Summary:
 *  Callback type to be registered for a topic filter with the subscription manager.
 *  For incoming PUBLISH messages received on topics that match the registered topic filter,
 *  the callback would be invoked by the subscription manager.
 * Parameters:
 *  phandle - The handle associated with the MQTT connection.
 *  pPublishInfo - The incoming PUBLISH message information.
 * Return:
 *  void
 **********************************************************************************************************************
 */
typedef void (*SubscriptionManagerCallback_t)(cy_mqtt_t phandle, cy_mqtt_received_msg_info_t *pPublishInfo);

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void SubscriptionManager_DispatchHandler(cy_mqtt_t phandle, cy_mqtt_received_msg_info_t *pPublishInfo);
SubscriptionManagerStatus_t SubscriptionManager_RegisterCallback(const char *pTopicFilter,
        uint16_t topicFilterLength,
        SubscriptionManagerCallback_t pCallback);
void SubscriptionManager_RemoveCallback(const char * pTopicFilter, uint16_t topicFilterLength);

#endif /* ifndef MQTT_SUBSCRIPTION_MANAGER_H_ */
